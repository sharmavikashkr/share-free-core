on:
  push:
    branches:
      - production
name: Prod - Build & Deploy
env:
  LOCATION: centralindia
  RESOURCE_GROUP: ShareFreeARG
  STORAGE_ACCOUNT: sharefreeasa
  STORAGE_CONTAINER: sharefreeasc
  CONTAINER_REGISTERY: sharefreeacr
  APP_NAME: share-free-core
  WEBAPP_NAME: sharefreecore
jobs:
    build-and-deploy:
        runs-on: ubuntu-latest
        steps:

        - name: Checkout GitHub Action
          uses: actions/checkout@master
          
        - name: Login to Azure
          uses: azure/login@v1
          with:
            creds: ${{ secrets.PROD_AZURE_CREDENTIALS }}

        - name: Set default location
          run: |
            az configure --defaults location=${{ env.LOCATION }}
            az configure --defaults group=${{ env.RESOURCE_GROUP }}
        
        - name: Touch Azure Storage Account
          run: az storage account create -n ${{ env.STORAGE_ACCOUNT }} --sku Standard_LRS

        - name: Create Azure Storage SAS Token
          run: |
            end_date=`date -u -d "30 days" '+%Y-%m-%dT%H:%MZ'`
            SAS_TOKEN=$(az storage account generate-sas --permissions cdlruwap --account-name ${{ env.STORAGE_ACCOUNT }} --services bf --resource-types sco --expiry $end_date -o tsv)
            echo $SAS_TOKEN
            echo 'SAS_TOKEN='$SAS_TOKEN >> $GITHUB_ENV
        
        - name: Touch Azure Storage Container
          run: az storage container create -n ${{ env.STORAGE_CONTAINER }} --account-name ${{ env.STORAGE_ACCOUNT }} --sas-token ${{ env.SAS_TOKEN }}

        - name: Create .env
          run: |
            touch .env
            echo 'AZURE_STORAGE_ACCOUNT=${{ env.STORAGE_ACCOUNT }}' >> .env
            echo 'AZURE_STORAGE_CONTAINER=${{ env.STORAGE_CONTAINER }}' >> .env
            echo 'AZURE_STORAGE_SAS_KEY='${{ env.SAS_TOKEN }} >> .env
            echo 'MONGO_DB_URL='${{ secrets.MONGO_DB_URL }} >> .env

        - name: Create service-account.json
          run: |
            touch src/auth/service-account.json
            printf '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}' >> src/auth/service-account.json

        - name: Build & Push
          uses: azure/docker-login@v1
          with:
            login-server: ${{ env.CONTAINER_REGISTERY }}.azurecr.io
            username: ${{ secrets.PROD_AZURE_USERNAME }}
            password: ${{ secrets.PROD_AZURE_PASSWORD }}
        - run: |
            docker build . -t ${{ env.APP_NAME }}:1.0.${{ github.run_number }}
            docker tag ${{ env.APP_NAME }}:1.0.${{ github.run_number }} ${{ env.CONTAINER_REGISTERY }}.azurecr.io/builds/${{ env.APP_NAME }}:1.0.${{ github.run_number }}
            docker push ${{ env.CONTAINER_REGISTERY }}.azurecr.io/builds/${{ env.APP_NAME }}:1.0.${{ github.run_number }}
        
        - uses: azure/webapps-deploy@v2
          with:
            app-name: ${{ env.WEBAPP_NAME }}
            images: ${{ env.CONTAINER_REGISTERY }}.azurecr.io/builds/${{ env.APP_NAME }}:1.0.${{ github.run_number }}

        - name: logout
          run: |
            az logout
